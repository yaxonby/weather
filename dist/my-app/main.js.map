{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/my-input/input-clearable-example.css","webpack:///./src/app/my-input/input-clearable-example.html","webpack:///./src/app/my-input/input-clearable-example.ts","webpack:///./src/app/my-nav/my-nav.component.css","webpack:///./src/app/my-nav/my-nav.component.html","webpack:///./src/app/my-nav/my-nav.component.ts","webpack:///./src/app/store/actions/weathers.ts","webpack:///./src/app/store/reducers/index.ts","webpack:///./src/app/store/reducers/weathers.ts","webpack:///./src/app/weather.component.html","webpack:///./src/app/weather.component.scss","webpack:///./src/app/weather.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"./data.service\";\nimport { Observable } from \"rxjs\";\nimport { Action } from \"@ngrx/store\";\n\n@Component({\n  selector: \"app-root\",\n  //  templateUrl: \"./app.component.html\",\n  template: `\n    <div style=\"text-align:center\">\n      <app-my-nav></app-my-nav>\n      <h1>\n        Weather!\n      </h1>\n      <app-weather></app-weather>\n    </div>\n  `,\n  styleUrls: [\"./app.component.css\"],\n  providers: [DataService]\n})\nexport class AppComponent implements OnInit {\n  locationName: string;\n  items = {};\n\n  constructor(private dataService: DataService) {}\n\n  addLocated(locationName) {\n    console.log(locationName);\n    //   this.dataService.loadData(locationName);\n    this.locationName = \"\";\n  }\n\n  ngOnInit() {\n    this.items = this.dataService.getData();\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MyNavComponent } from \"./my-nav/my-nav.component\";\nimport { InputClearableExample } from \"./my-input/input-clearable-example\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport {\n  MatToolbarModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule\n} from \"@angular/material\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { WeatherComponent } from \"./weather.component\";\nimport { reducers, metaReducers } from \"./store/reducers\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\n\nexport const MATERIAL_MODULES = [\n  MatToolbarModule,\n  MatListModule,\n  MatCardModule\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyNavComponent,\n    WeatherComponent,\n    InputClearableExample\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ...MATERIAL_MODULES,\n\n    StoreModule.forRoot(reducers, { metaReducers })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","export class DataService {\r\n  data;\r\n  /*\r\n  private data = [\r\n    {\r\n      located: \"London\",\r\n      weather: {\r\n        coord: { lon: -0.13, lat: 51.51 },\r\n        weather: [\r\n          {\r\n            id: 300,\r\n            main: \"Drizzle\",\r\n            description: \"light intensity drizzle\",\r\n            icon: \"09d\"\r\n          }\r\n        ],\r\n        base: \"stations\",\r\n        main: {\r\n          temp: 280.32,\r\n          pressure: 1012,\r\n          humidity: 81,\r\n          temp_min: 279.15,\r\n          temp_max: 281.15\r\n        },\r\n        visibility: 10000,\r\n        wind: { speed: 4.1, deg: 80 },\r\n        clouds: { all: 90 },\r\n        dt: 1485789600,\r\n        sys: {\r\n          type: 1,\r\n          id: 5091,\r\n          message: 0.0103,\r\n          country: \"GB\",\r\n          sunrise: 1485762037,\r\n          sunset: 1485794875\r\n        },\r\n        id: 2643743,\r\n        name: \"London\",\r\n        cod: 200\r\n      }\r\n    }\r\n  ];\r\n*/\r\n\r\n  addData(name: string, dataWether) {\r\n    // this.data.push({ located: name, weather: dataWether });\r\n    this.data = { located: name, weather: dataWether };\r\n\r\n    console.log(\"add new city:\", this.data);\r\n    this.getData();\r\n  }\r\n  /*\r\n  loadData(locationName, url) {\r\n    const loadPromise = new Promise((resolve, reject) => {\r\n      const myInit = {\r\n        method: \"GET\",\r\n        cache: \"default\"\r\n      };\r\n      let dataWether;\r\n\r\n      async function fetchAsync(url) {\r\n        const dataJson = await fetch(url, myInit);\r\n        return (dataWether = await dataJson.json());\r\n      }\r\n      fetchAsync(url).then(() => {\r\n        console.log(dataWether);\r\n        resolve({ located: locationName, weather: dataWether });\r\n      });\r\n    });\r\n    \r\n    loadPromise.then(result => {\r\n      this.citys = result;\r\n      console.log(\"this.citys--\", this.citys);\r\n      this.store.dispatch(\r\n        new cityAction.AddOne({\r\n          ids: this.citys.weather.id,\r\n          citys: {\r\n            id: this.citys.weather.id,\r\n            name: this.citys.weather.name,\r\n            description: this.citys.weather.weather[0].description,\r\n            temperature: this.citys.weather.main.temp,\r\n            wind: this.citys.weather.wind.speed,\r\n            precipitation: this.citys.weather.clouds.all\r\n          }\r\n        })\r\n      );\r\n      this.locationName = \"\";\r\n    });\r\n    \r\n  }\r\n*/\r\n  getData() {\r\n    return this.data;\r\n  }\r\n}\r\n","module.exports = \".example-form-field {\\r\\n    width: 200px;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbXktaW5wdXQvaW5wdXQtY2xlYXJhYmxlLWV4YW1wbGUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvbXktaW5wdXQvaW5wdXQtY2xlYXJhYmxlLWV4YW1wbGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgfVxyXG4gICJdfQ== */\"","module.exports = \"<mat-form-field class=\\\"example-form-field\\\">\\r\\n  <input\\r\\n    matInput\\r\\n    type=\\\"text\\\"\\r\\n    placeholder=\\\"Clearable input\\\"\\r\\n    [(ngModel)]=\\\"value\\\"\\r\\n  />\\r\\n  <button\\r\\n    mat-button\\r\\n    *ngIf=\\\"value\\\"\\r\\n    matSuffix\\r\\n    mat-icon-button\\r\\n    aria-label=\\\"Clear\\\"\\r\\n    (click)=\\\"value = ''\\\"\\r\\n  >\\r\\n    <mat-icon>close</mat-icon>\\r\\n  </button>\\r\\n</mat-form-field>\\r\\n\"","import { Component } from \"@angular/core\";\r\n\r\n/**\r\n * @title Input with a clear button\r\n */\r\n@Component({\r\n  selector: \"input-clearable-example\",\r\n  templateUrl: \"./input-clearable-example.html\",\r\n  styleUrls: [\"./input-clearable-example.css\"]\r\n})\r\nexport class InputClearableExample {\r\n  value = \"Clear me\";\r\n}\r\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.sidenav .mat-toolbar {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbXktbmF2L215LW5hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usd0JBQWdCO0VBQWhCLGdCQUFnQjtFQUNoQixNQUFNO0VBQ04sVUFBVTtBQUNaIiwiZmlsZSI6InNyYy9hcHAvbXktbmF2L215LW5hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufVxuIl19 */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\"\\n  >\\n    <mat-toolbar>Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"#\\\">Link 1</a>\\n      <a mat-list-item href=\\\"#\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"(isHandset$ | async)\\\"\\n      >\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Weather today</span>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.css']\n})\nexport class MyNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","import { Action } from \"@ngrx/store\";\r\nimport { City } from \"../../models\";\r\n\r\nexport const SELECT = \"[Citys] Select\";\r\nexport const ADD_ONE = \"[Citys] Add One\";\r\nexport const DELETE_ONE = \"[Citys] Delete One\";\r\n\r\nexport class Select implements Action {\r\n  readonly type = SELECT;\r\n\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class DeleteOne implements Action {\r\n  readonly type = DELETE_ONE;\r\n\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class AddOne implements Action {\r\n  readonly type = ADD_ONE;\r\n\r\n  //constructor(public payload: City) {}\r\n  constructor(public payload) {}\r\n}\r\n\r\nexport type Action = AddOne | DeleteOne;\r\n//export type Action = AddOne | Select;\r\n","import {\r\n  ActionReducerMap,\r\n  createSelector,\r\n  createFeatureSelector,\r\n  ActionReducer,\r\n  MetaReducer\r\n} from \"@ngrx/store\";\r\n\r\nimport * as fromCitys from \"./weathers\";\r\n\r\nexport interface State {\r\n  citys: fromCitys.State;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  citys: fromCitys.reducer\r\n};\r\n\r\nexport function logger(reducer: ActionReducer<State>): ActionReducer<State> {\r\n  return function(state: State, action: any): State {\r\n    console.log(\"state\", state);\r\n    console.log(\"action\", action);\r\n    return reducer(state, action);\r\n  };\r\n}\r\n\r\nexport const metaReducers: MetaReducer<State>[] = [logger];\r\n\r\nexport const getCityState = createFeatureSelector<fromCitys.State>(\"citys\");\r\n\r\nexport const getIds = createSelector(\r\n  getCityState,\r\n  fromCitys.getIds\r\n);\r\n\r\nexport const getCitys = createSelector(\r\n  getCityState,\r\n  fromCitys.getCitys\r\n);\r\n\r\nexport const getSelected = createSelector(\r\n  getCityState,\r\n  fromCitys.getSelected\r\n);\r\n\r\nexport const getSelectedCity = createSelector(\r\n  getSelected,\r\n  getCitys,\r\n  (selectedId, citys) => {\r\n    return {\r\n      ...citys[selectedId]\r\n    };\r\n  }\r\n);\r\n\r\nexport const getAllCity = createSelector(getCitys);\r\n","import { Action } from \"@ngrx/store\";\r\nimport * as cityAction from \"../actions/weathers\";\r\nimport { City } from \"../../models\";\r\n\r\nexport interface State {\r\n  ids: number[];\r\n  citys: City[];\r\n  selected: number;\r\n}\r\n\r\nexport const initialState: State = {\r\n  ids: [1, 2, 3],\r\n  citys: [\r\n    {\r\n      id: 1,\r\n      name: \"Minsk\",\r\n      description: `прохладно`,\r\n      temperature: 5,\r\n      wind: 3,\r\n      precipitation: 20\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Moskva\",\r\n      description: \"облачно\",\r\n      temperature: 3,\r\n      wind: 5,\r\n      precipitation: 30\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Kiev\",\r\n      description: \"ветряно\",\r\n\r\n      temperature: 4,\r\n      wind: 10,\r\n      precipitation: 35\r\n    }\r\n  ],\r\n  selected: null\r\n};\r\n\r\nexport function reducer(state = initialState, action: cityAction.Action) {\r\n  switch (action.type) {\r\n    case cityAction.ADD_ONE: {\r\n      const newCity = <any>action.payload;\r\n      //const { ids, citys } = newFilm;\r\n      //console.log(\"citys-\", citys);\r\n      //console.log(\"state-\", state);\r\n      // console.log(\"cmalo-\", {\r\n      //   ...state,\r\n      //  ids: [...state.ids, newFilm.ids],\r\n      //   citys: [...state.citys, newFilm.citys]\r\n      // });\r\n      return {\r\n        ...state,\r\n        ids: [...state.ids, newCity.ids],\r\n        citys: [...state.citys, newCity.citys]\r\n      };\r\n    }\r\n\r\n    case cityAction.DELETE_ONE: {\r\n      const id = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        //       ids: [...state.ids].filter((item: number, i, arr) => item.id !== id),\r\n        citys: [...state.citys].filter((item, i, arr) => item.id !== id)\r\n      };\r\n    }\r\n\r\n    //  case cityAction.SELECT: {\r\n    //    const id = action.payload;\r\n    //    return {\r\n    //      ...state,\r\n    //     selected: id\r\n    //   };\r\n    // }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getIds = (state: State) => state.ids;\r\nexport const getCitys = (state: State) => state.citys;\r\nexport const getSelected = (state: State) => state.selected;\r\n","module.exports = \"<p>\\r\\n  <button (click)=\\\"geoFindMe()\\\">Find weather my location</button>\\r\\n</p>\\r\\n<div id=\\\"out\\\"></div>\\r\\n<span>Enter your location:</span>\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"locationName\\\" />\\r\\n<button (click)=\\\"addLocated(locationName)\\\">Find weather</button>\\r\\n<ul>\\r\\n  <li style=\\\"list-style-type:none\\\" *ngFor=\\\"let city of (listCitys$ | async)\\\">\\r\\n    <span>{{ city.name }}, &nbsp;</span>\\r\\n    <span> &nbsp; {{ city.temperature }} °С, &nbsp;</span>\\r\\n    <span> &nbsp; {{ city.description }}, &nbsp;</span>\\r\\n    <span>ветер: &nbsp; {{ city.wind }}м/c, &nbsp;</span>\\r\\n    <span>осадки: &nbsp; {{ city.precipitation }}мм</span>\\r\\n    <span style=\\\"cursor:pointer\\\" (click)=\\\"deleteLocated(city.id)\\\"\\r\\n      >&nbsp;&nbsp; x</span\\r\\n    >\\r\\n  </li>\\r\\n</ul>\\r\\n\"","module.exports = \".container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-around; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRTpcXHdlYlxcc2l0ZVxcQW5ndWxhclxcd2VhdGhlci9zcmNcXGFwcFxcd2VhdGhlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsNkJBQTZCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC93ZWF0aGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59Il19 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { City } from \"./models\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport * as fromRoot from \"./store/reducers\";\r\nimport * as cityAction from \"./store/actions/weathers\";\r\nimport { DataService } from \"./data.service\";\r\nimport { MatInkBar } from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: \"app-weather\",\r\n  templateUrl: \"./weather.component.html\",\r\n  styleUrls: [\"./weather.component.scss\"],\r\n  providers: [DataService]\r\n})\r\nexport class WeatherComponent implements OnInit {\r\n  listCitys$: Observable<City[]>;\r\n  selected$: Observable<City>;\r\n  listCity;\r\n  locationName: string;\r\n  citysNew;\r\n\r\n  constructor(\r\n    private store: Store<fromRoot.State>,\r\n    private dataService: DataService\r\n  ) {\r\n    this.listCitys$ = store.select(fromRoot.getCitys);\r\n    this.selected$ = store.select(fromRoot.getSelectedCity);\r\n  }\r\n\r\n  ngOnInit() {\r\n    //  this.citys = this.dataService.getData();\r\n    console.log(\"ngOnInit\");\r\n  }\r\n\r\n  onSelect(id: number) {\r\n    this.store.dispatch(new cityAction.Select(id));\r\n    console.log(\"citys$-\", this.listCitys$);\r\n  }\r\n\r\n  deleteLocated(id) {\r\n    this.store.dispatch(new cityAction.DeleteOne(id));\r\n  }\r\n\r\n  addLocated(locationName = \"Kiev\", latitude, longitude) {\r\n    const keyApi = \"&APPID=5baf5448a135ea4bda7e758af88b0136\";\r\n    const metric = \"&units=metric\";\r\n    const lang = \"&lang=ru\";\r\n    let url =\r\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\r\n      locationName +\r\n      metric +\r\n      lang +\r\n      keyApi;\r\n    if (latitude) {\r\n      url =\r\n        \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\r\n        latitude +\r\n        \"&lon=\" +\r\n        longitude +\r\n        metric +\r\n        lang +\r\n        keyApi;\r\n    }\r\n    const loadPromise = new Promise((resolve, reject) => {\r\n      // const myInit = {\r\n      //   method: \"GET\",\r\n      //   cache: \"default\"\r\n      // };\r\n      let dataWether;\r\n\r\n      async function fetchAsync(url) {\r\n        const dataJson = await fetch(url);\r\n        //const dataJson = await fetch(url, myInit);\r\n        return (dataWether = await dataJson.json());\r\n      }\r\n      fetchAsync(url).then(() => {\r\n        console.log(dataWether);\r\n        resolve({ located: locationName, weather: dataWether });\r\n      });\r\n    });\r\n    loadPromise.then(result => {\r\n      this.citysNew = result;\r\n      console.log(\"this.citys--\", this.citysNew);\r\n      this.store.dispatch(\r\n        new cityAction.AddOne({\r\n          ids: this.citysNew.weather.id,\r\n          citys: {\r\n            id: this.citysNew.weather.id,\r\n            name: this.citysNew.weather.name,\r\n            description: this.citysNew.weather.weather[0].description,\r\n            temperature: this.citysNew.weather.main.temp,\r\n            wind: this.citysNew.weather.wind.speed,\r\n            precipitation: this.citysNew.weather.clouds.all\r\n          }\r\n        })\r\n      );\r\n      this.locationName = \"\";\r\n    });\r\n  }\r\n\r\n  geoFindMe() {\r\n    let latitude;\r\n    let longitude;\r\n    const self = this;\r\n    const output = document.getElementById(\"out\");\r\n\r\n    if (!navigator.geolocation) {\r\n      output.innerHTML = \"<p>Geolocation is not supported by your browser</p>\";\r\n      return;\r\n    }\r\n\r\n    function success(position) {\r\n      latitude = position.coords.latitude.toFixed(2);\r\n      longitude = position.coords.longitude.toFixed(2);\r\n\r\n      output.innerHTML =\r\n        \"<p>Latitude: \" + latitude + \"°, Longitude: \" + longitude + \"°</p>\";\r\n\r\n      console.log(\"отправка latitude, longitude=\", latitude, longitude);\r\n      self.addLocated(undefined, latitude, longitude);\r\n    }\r\n\r\n    function error() {\r\n      output.innerHTML = \"Unable to retrieve your location\";\r\n    }\r\n\r\n    output.innerHTML = \"<p>Locating…</p>\";\r\n\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}